name: Rust

on:
  [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3

    - name: install llvm18
      run: 
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -;
        sudo add-apt-repository "deb https://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-18 main";
        sudo apt update;
         sudo apt install llvm-18 llvm-18-dev libpolly-18-dev;

    - name: install nightly rust
      run : |
        rustup install nightly;
        rustup default nightly

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: |
        cargo build -p pycc-rs --release --no-default-features --features=backend-c,parallel-declare --verbose;
        mv target/release/pycc-rs target/release/pycc-rs-linux-backend-c;
        cargo build -p pycc-rs --release --no-default-features --features=backend-llvm,backend-c,parallel-declare,inkwell/llvm18-0-force-static --verbose;
        mv target/release/pycc-rs target/release/pycc-rs-linux-backend-llvm-static;
        cargo build -p pycc-rs --release --no-default-features --features=backend-llvm,backend-c,parallel-declare,inkwell/llvm18-0-force-static --verbose;
        mv target/release/pycc-rs target/release/pycc-rs-linux-backend-llvm-dynamic;
        

    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs-linux-*

    - name: Publish to crates.io
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd terl;               cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-lex;          cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-ir;           cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-declare;      cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-ast;          cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-codegen;      cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-codegen-c;    cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-codegen-llvm; cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../pycc-rs;         cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
  
  build-macos:
    runs-on: macos-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3

    - name: install llvm18
      run: |
        brew install llvm@18;
        echo "$(brew --prefix llvm@18)/bin:$PATH"   >> $GITHUB_PATH;
        echo LDFLAGS="-L$(brew --prefix llvm@18)/lib"       >> $GITHUB_ENV;
        echo CPPFLAGS="-I$(brew --prefix llvm@18)/include"  >> $GITHUB_ENV;
        echo CC="$(brew --prefix llvm@18)/bin/clang"        >> $GITHUB_ENV;
        echo CXX="$(brew --prefix llvm@18)/bin/clang++"     >> $GITHUB_ENV;
        echo LDFLAGS="-L$(brew --prefix zstd)/lib"          >> $GITHUB_ENV;
        echo CPPFLAGS="-I$(brew --prefix zstd)/include"     >> $GITHUB_ENV;
        echo LIBRARY_PATH="$(brew --prefix zstd)/lib"       >> $GITHUB_ENV;
        echo DYLD_LIBRARY_PATH="$(brew --prefix zstd)/lib"  >> $GITHUB_ENV;

        
    - name: install nightly rust
      run: |
        rustup install nightly;
        rustup default nightly

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: |
        cargo build -p pycc-rs --release --no-default-features --features=backend-c,parallel-declare --verbose;
        mv target/release/pycc-rs target/release/pycc-rs-macos-backend-c;
        cargo build -p pycc-rs --release --no-default-features --features=backend-llvm,backend-c,parallel-declare,inkwell/llvm18-0-force-static --verbose;
        mv target/release/pycc-rs target/release/pycc-rs-macos-backend-llvm-static;
        cargo build -p pycc-rs --release --no-default-features --features=backend-llvm,backend-c,parallel-declare,inkwell/llvm18-0-force-static --verbose;
        mv target/release/pycc-rs target/release/pycc-rs-macos-backend-llvm-dynamic;
  
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs-macos-*