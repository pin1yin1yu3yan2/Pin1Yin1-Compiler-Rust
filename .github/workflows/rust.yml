name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: install llvm
      run: 
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -;
        sudo add-apt-repository "deb https://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-17 main";
        sudo apt update;
        sudo apt install llvm-17

    - name: install nightly rust
      run : rustup install nightly;
        rustup default nightly

    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs

  build-windows:
    runs-on: windows-latest
    steps:
    - name: install nightly rust
      run : rustup install nightly;
        rustup default nightly

    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs.exe
          
  publish-crate:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
  
    - name: Publish to crates.io
      run: |
        cd terl;               cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }} 
        cd ../py-lex;          cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../py-ir;           cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../py-declare;      cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../py-ast;          cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../py-codegen;      cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../py-codegen-c;    cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../py-codegen-llvm; cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}
        cd ../pycc-rs;         cargo publish --dry-run --token ${{ secrets.CRATES_IO_TOKEN }}