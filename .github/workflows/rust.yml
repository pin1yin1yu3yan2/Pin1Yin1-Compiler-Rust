name: Rust

on:
  [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: install llvm
      run: 
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -;
        sudo add-apt-repository "deb https://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-17 main";
        sudo apt update;
        sudo apt install llvm-17

    - name: install nightly rust
      run : |
        rustup install nightly;
        rustup default nightly

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: cargo build --release --verbose

    - name: rename-file-to-be-released
      if: startsWith(github.ref, 'refs/tags/')
      run: mv target/release/pycc-rs target/release/pycc-rs-linux
  
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs-linux
    

    - name: Publish to crates.io
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        cd terl;               cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-lex;          cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-ir;           cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-declare;      cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-ast;          cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-codegen;      cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-codegen-c;    cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../py-codegen-llvm; cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
        cd ../pycc-rs;         cargo publish --token ${{ secrets.CRATES_IO_TOKEN }};
  
  build-macos-intel:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3

    - name: install llvm17
      run: |
        brew install llvm@17;
        echo "$(brew --prefix llvm@17)/bin:$PATH"   >> $GITHUB_PATH;
        echo LDFLAGS="-L$(brew --prefix llvm@17)/lib"       >> $GITHUB_ENV;
        echo CPPFLAGS="-I$(brew --prefix llvm@17)/include"  >> $GITHUB_ENV;
        echo CC="$(brew --prefix llvm@17)/bin/clang"        >> $GITHUB_ENV;
        echo CXX="$(brew --prefix llvm@17)/bin/clang++"     >> $GITHUB_ENV;
        
    - name: install nightly rust
      run: |
        rustup install nightly;
        rustup default nightly

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: cargo build --release --verbose
  
    - name: rename-file-to-be-released
      if: startsWith(github.ref, 'refs/tags/')
      run: mv target/release/pycc-rs target/release/pycc-rs-macos-intel

    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs-macos-intel
  
  build-macos-arm:
    runs-on: macos-latest-arm64
    steps:
    - uses: actions/checkout@v3

    - name: install llvm17
      run: |
        brew install llvm@17;
        echo "$(brew --prefix llvm@17)/bin:$PATH"   >> $GITHUB_PATH;
        echo LDFLAGS="-L$(brew --prefix llvm@17)/lib"       >> $GITHUB_ENV;
        echo CPPFLAGS="-I$(brew --prefix llvm@17)/include"  >> $GITHUB_ENV;
        echo CC="$(brew --prefix llvm@17)/bin/clang"        >> $GITHUB_ENV;
        echo CXX="$(brew --prefix llvm@17)/bin/clang++"     >> $GITHUB_ENV;
        
    - name: install nightly rust
      run: |
        rustup install nightly;
        rustup default nightly

    - name: Run tests
      run: cargo test --verbose

    - name: Build
      run: cargo build --release --verbose
  
    - name: rename-file-to-be-released
      if: startsWith(github.ref, 'refs/tags/')
      run: mv target/release/pycc-rs target/release/pycc-rs-macos-arm

    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          target/release/pycc-rs-macos-arm